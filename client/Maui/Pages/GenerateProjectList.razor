@page "/generateprojectlist"

@using AutomationToolkit.Core.Model
@using Blazor.Services

@inject ApiService ApiSvc
@inject NavigationManager NavigationManager

<div class="container">
    <div class="card">
        <div class="card-header">
            <h3>Generate project from template</h3>
        </div>

        <div class="card-body">

            <h2>Presets</h2>

            @foreach (var item in PresetsWithCategories)
            {
                <div class="card mb-3">
                    <div class="card-header">@item.Key</div>
                    <div class="card-body">
                        <table class="table table-hover table-sm" style="width:100%">
                            <thead>
                                <tr>
                                    <th>Alias</th>
                                    <th class="text-end">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var preset in item.Value)
                                {
                                    <tr placement="top-left" title="@preset.Tooltip">
                                        <td>@preset.Alias</td>
                                        <td align="right">
                                            <button type="button" class="btn btn-sm btn-outline-success" @onclick="(()=>GenerateProject(preset.Alias))">Generate!</button>
                                            <button type="button" class="btn btn-sm btn-outline-primary" @onclick="(()=>EditTemplate(preset.Alias))">Edit</button>
                                            <button type="button" class="btn btn-sm btn-outline-dark" @onclick="(()=>DeleteTemplate(preset.Alias))" disabled>Delete</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>

        <div class="card-footer text-muted">
            <button type="button" class="btn btn-secondary" @onclick="GoBack">Back</button>
        </div>

    </div>
</div>

@code {
    public Dictionary<string, IEnumerable<Preset>> PresetsWithCategories { get; set; } = new();

    private bool _postOk = false;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await RefreshData();
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/");
    }

    private async Task RefreshData()
    {
        var presets = await ApiSvc.GetAll<Preset>("presets");

        var groupByCategories = presets.GroupBy(p => p.AliasCategory);

        foreach (var item in groupByCategories)
        {
            PresetsWithCategories[item.Key] = item.ToList();
        }
    }

    private void GenerateProject(string presetAlias)
    {
        NavigationManager.NavigateTo($"/generateproject/{presetAlias}");
    }

    private void EditTemplate(string presetAlias)
    {
        NavigationManager.NavigateTo($"/createtemplate/{presetAlias}");
    }

    private Task DeleteTemplate(string presetAlias)
    {
        return Task.CompletedTask;
    }
}